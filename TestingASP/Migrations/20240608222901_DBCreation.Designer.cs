// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestingASP.DataAccessLayer;

#nullable disable

namespace TestingASP.Migrations
{
    [DbContext(typeof(TestingASPContext))]
    [Migration("20240608222901_DBCreation")]
    partial class DBCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestingASP.Models.UserProfile", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserProfiles", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("TestingASP.Models.BloodPressureRecord", b =>
                {
                    b.HasBaseType("TestingASP.Models.UserProfile");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Diastolic")
                        .HasColumnType("int");

                    b.Property<int>("Pulse")
                        .HasColumnType("int");

                    b.Property<Guid>("ReadingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Systolic")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserProfileUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("UserProfileUserId");

                    b.ToTable("BloodPressureRecords", (string)null);
                });

            modelBuilder.Entity("TestingASP.Models.BloodPressureRecord", b =>
                {
                    b.HasOne("TestingASP.Models.UserProfile", null)
                        .WithOne()
                        .HasForeignKey("TestingASP.Models.BloodPressureRecord", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestingASP.Models.UserProfile", null)
                        .WithMany("BloodPressureRecords")
                        .HasForeignKey("UserProfileUserId");
                });

            modelBuilder.Entity("TestingASP.Models.UserProfile", b =>
                {
                    b.Navigation("BloodPressureRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
